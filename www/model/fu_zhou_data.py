import os
import pandas as pd


def path_help(path):
    dir_path = os.path.join(
        os.path.abspath(os.path.join(os.path.dirname(os.path.dirname(os.path.realpath(__file__))), "..")))
    return os.path.join(dir_path, 'www/data/fu_zhou_data/{}'.format(path))


# 新旧行业占比
def get_all_pow_consum(year):
    model_path = path_help('all_ind_power_consumption.csv')

    b_df = pd.read_csv(model_path)
    b_df.rename(columns={b_df.columns[0]: 'year'}, inplace=True)
    b_df['other'] = b_df[b_df.columns[1]] - b_df[b_df.columns[2]] - b_df[b_df.columns[3]]
    result = b_df.query('year=={}'.format(year))

    data = {
        'all_inds': result.all_pow.tolist()[0],
        'old_ind': result.old_pow.tolist()[0],
        'new_ind': result.new_pow.tolist()[0],
        'other': result.other.tolist()[0],
        'year': year
    }
    return data


# 新行业排名
def get_new_ind_top10(year, tag):
    if tag == 'new':
        model_path = path_help('new_ind_top10.csv')

        new_ind_data = pd.read_csv(model_path)
        # print(new_ind_data)
        # exit()

        """
        对原始数据的处理转换
        model_path = path_help('new_ind_top10.csv')
        new_ind_data = pd.read_csv(model_path, encoding='gbk')

        year_data = [i for i in new_ind_data.columns if i.isdigit()]
        new_name = ['chinese_ind_name2013',
                    'chinese_ind_name2014',
                    'chinese_ind_name2015',
                    'chinese_ind_name2016',
                    'chinese_ind_name2017',
                    'chinese_ind_name2018']

        for v in range(len([i for i in new_ind_data.columns if i.isdigit()])):
            new_ind_data.rename(columns={[j for j in new_ind_data.columns if j.startswith('chi')][v]: new_name[v]},
                                inplace=True)
        """

        # 检索数据
        new_ind_data = new_ind_data[['inds_name' + str(year), str(year)]]

        # print(new_ind_data)
        new_ind_data.sort_values(by=[new_ind_data.columns[1]], inplace=True)
        industry_name = new_ind_data[new_ind_data.columns[0]].tolist()
        industry_num = new_ind_data[new_ind_data.columns[1]].tolist()

        return {
            'industry_name_y': industry_name,
            'industry_num': industry_num,
            'year': year
        }
    elif tag == 'old':
        model_path = path_help('old_ind_top10.csv')

        old_ind_data = pd.read_csv(model_path)
        old_ind_data = old_ind_data[['inds_name' + str(year), str(year)]]

        # print(old_ind_data)
        old_ind_data.sort_values(by=[old_ind_data.columns[1]], inplace=True)
        industry_name = old_ind_data[old_ind_data.columns[0]].tolist()
        industry_num = old_ind_data[old_ind_data.columns[1]].tolist()

        return {
            'industry_name_y': industry_name,
            'industry_num': industry_num,
            'year': year
        }
    else:
        return None


# 旧行业排名
# def get_old_ind_top10(year):
#     model_path = path_help('new_ind_top10.csv')
#     new_ind_data = pd.read_csv(model_path, encoding='gbk')
#
#     new_ind_data = new_ind_data.iloc[:, 1:]
#     new_ind_data.sort_values(by=[new_ind_data.columns[2]], inplace=True)
#     industry_name = new_ind_data[new_ind_data.columns[0]].tolist()
#     industry_num = new_ind_data[new_ind_data.columns[2]].tolist()
#
#     return {
#         'industry_name_y': industry_name,
#         'industry_num': industry_num,
#         'year': year
#     }


# 新动能行业用电量指数
def get_new_ind_index():
    model_path = path_help('power_index_df_100.csv')
    new_ind_index = pd.read_csv(model_path)

    new_ind_index.rename(columns={new_ind_index.columns[0]: 'date'}, inplace=True)

    date = new_ind_index['date'].tolist()
    old_index = new_ind_index['old'].tolist()
    new_index = new_ind_index['new'].tolist()

    # print(date)
    # print(old_index)
    # print(old_index)

    return {
        'date': date,
        'old_index': old_index,
        'new_index': new_index
    }


# 新旧动能用电量增速
def get_pow_speed():
    speed = pd.read_csv(path_help('all_ind_power_consumption.csv'))
    speed['mean'] = (speed['old_ind'] + speed['new_ind']) / 2

    data = {
        "year": speed[speed.columns[0]].tolist(),
        "old_ind": (speed[speed.columns[2]] / 100000000).tolist(),
        "new_ind": (speed[speed.columns[3]] / 100000000).tolist(),
        "mean": (speed[speed.columns[-1]] / 100000000).tolist()
    }

    return data


# o = [-6.380070106,-52.65045855,82.10270219,23.66038756,2.948454496,-1.662498565,-0.917683695,0.326316599,-0.822221881,1.265895734,7.8079122,2.91891498,-12.00347113,-36.79338602,-18.73834505,102.4426841,-4.250191011,-1.419846268,-2.491476745,3.241617375,-4.797368171,-2.089763395,11.6805201,0.671830777,-6.535195394,-52.4137968,66.44316622,32.13499117,-3.892506455,0.838444069,1.899203654,-0.561771599,2.627720964,2.657435036,3.457971089,-4.978978788,-10.38437076,-35.87963258,58.86099971,12.22209538,2.214614041,3.637013497,-4.737671613,10.61050789,4.264402567,-1.987200942,3.103148409,4.015068928,18.97443414,-33.90562853,-11.35554253,64.59525138,-1.147873078,0.326465669,-6.520478775,9.71041754,5.012895601,-6.618027834,1.406346541,-7.958982435,6.961220337,-38.80473311,14.2642889,56.14944342,-4.285488419,-1.634030437,1.12925602,2.627581439]
# n = [8.1319157,-14.95842245,-2.076496118,7.157285217,-6.575368477,10.72126902,10.40965371,14.35544615,-4.139758385,-6.932320188,-1.613120889,6.082594058,12.70885438,-8.553562068,-4.04713511,8.363176297,-9.749990916,14.00711139,2.201489107,6.324049856,4.334431649,-14.79777837,4.520863636,3.139199832,12.69212567,0.190914785,-8.972921171,4.878856088,-5.804190739,10.47869064,5.478908752,11.72455606,1.018921599,-15.29550393,-0.654065955,2.543177864,6.546697735,-3.531207916,-5.455002953,7.813703719,-4.877700338,4.851152634,2.934510093,21.90302743,9.48542474,-7.196509814,-1.99629138,-6.593009854,17.19546201,-2.940020589,-6.385375012,2.8259777,-2.853830919,10.00984405,9.642960406,36.64915909,-1.2491861,-25.9343193,-11.38983627,-10.45311669,28.68674264,-2.987276197,-6.828849001,12.24004531,-3.375122135,3.066992869,8.92392253,14.63171086]
# y = [201401,201402,201403,201404,201405,201406,201407,201408,201409,201410,201411,201412,201501,201502,201503,201504,201505,201506,201507,201508,201509,201510,201511,201512,201601,201602,201603,201604,201605,201606,201607,201608,201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712,201801,201802,201803,201804,201805,201806,201807,201808,201809,201810,201811,201812,201901,201902,201903,201904,201905,201906,201907,201908]
#
#
#
# o1 = [93.61992989,47.34954145,182.1027022,123.6603876,102.9484545,98.33750144,99.08231631,100.3263166,99.17777812,101.2658957,107.8079122,102.918915,87.99652887,63.20661398,81.26165495,202.4426841,95.74980899,98.58015373,97.50852326,103.2416174,95.20263183,97.9102366,111.6805201,100.6718308,93.46480461,47.5862032,166.4431662,132.1349912,96.10749354,100.8384441,101.8992037,99.4382284,102.627721,102.657435,103.4579711,95.02102121,89.61562924,64.12036742,158.8609997,112.2220954,102.214614,103.6370135,95.26232839,110.6105079,104.2644026,98.01279906,103.1031484,104.0150689,118.9744341,66.09437147,88.64445747,164.5952514,98.85212692,100.3264657,93.47952123,109.7104175,105.0128956,93.38197217,101.4063465,92.04101757,106.9612203,61.19526689,114.2642889,156.1494434,95.71451158,98.36596956,101.129256,102.6275814]
#
#
new = [122.31312482398656, 131.52507161637135,
       128.87822561675426, 130.32855260400376, 125.89991380922471, 129.6362083315848, 119.99868751207914,
       111.57095585228969, 121.4339967359392, 111.17120706828827, 118.10223760681224, 114.82534334003117,
       114.80830049299186, 125.78673277469856, 119.32941088391517, 115.4924812917143, 120.54190187010062,
       116.81123504816071, 120.55716321239669, 126.68061044151312, 122.6549898435604, 121.93847655768502,
       115.90118401484979, 115.23141294919348, 108.9475103257836, 104.90007745982544, 108.95414464850384,
       112.00303195734469, 113.10467049986156, 107.34337093887547, 104.75399707869127, 114.29742779132397,
       123.8768166431913, 135.721260036649, 133.8875813098585, 121.95873239571627, 134.14784589795434,
       134.96994084323347, 133.64176626258293, 127.45917080538909, 130.1710555991184, 136.57548978898947,
       145.47639082263, 163.07409990481722, 147.08533240697398, 117.38755992668959, 106.13609475744994,
       101.74994909274211]
old = [105.22083629685687, 140.45865235854265,
       62.67838096432373, 102.60989739615258, 95.43492541141279, 95.67041546875342, 94.15081600265982,
       96.88666793342458, 93.00335167204531, 89.921489374907, 93.151592460054, 91.11776348025067, 96.77999882027267,
       72.86251231638417, 149.23972760075478, 97.40925028826034, 97.77313388037506, 100.01293687424189,
       104.5163877204916, 100.66603660472812, 108.51723021426353, 113.77871096352048, 105.40168132460441,
       99.48538056348337, 95.38825889425158, 128.53158682389142, 122.67644770595241, 104.18896534874891,
       110.80962043302935, 113.88491992712231, 106.46739377159955, 118.4294278813458, 120.31811121289002,
       114.87443508777382, 114.48045814810328, 125.31640465821503, 166.37107231108638, 171.49295766537014,
       95.69309157584601, 140.35229345338226, 135.7352161075188, 131.39933349462092, 128.94023264331764,
       127.89098459542612, 128.80908807728784, 122.72322383613319, 120.70352803932501, 106.80832747542905]

m = [0.470268673,0.680940899,0.620408967,0.653577158,0.552296591,0.63774362,0.417338747,0.224601097,0.450163491,0.215459059,0.373967967,0.299027173,0.298637412,0.549708202,0.402032754,0.314284256,0.429761765,0.344443439,0.430110784,0.5701507,0.478086941,0.46170067,0.323631065,0.308313764,0.164604321,0.072041727,0.164756044,0.234482443,0.259676318,0.127918523,0.068700948,0.286954031,0.506029457,0.776905451,0.734970214,0.462163911,0.740922324,0.759723189,0.729348557,0.587955953,0.649975287,0.796441222,0.43805832,0.469320901,0.469320901,0.357623676,0.100308772,0]
c = [0.54695689,0.58881327,0,0.513388752,0.421142069,0.424169702,0.404632621,0.439806732,0.389879981,0.350257307,0.391785873,0.365637481,0.438435316,0.130934634,0.629570227,0.446525432,0.451203786,0.48000033,0.537899984,0.488397057,0.589337739,0.656983179,0.549281966,0.47321768,0.42054209,0.580246879,0.771378984,0.533690403,0.618810382,0.658348679,0.562983544,0.716776194,0.741058487,0.671070609,0.666005354,0.57469667,0.629570227,0.629570227,0.424461242,0.569892013,0.560959918,0.553078415,0.546194074,0.539824976,0.533604228,0.771980372,0.746013687,0.567366836]
t = [201501,201502,201503,201504,201505,201506,201507,201508,201509,201510,201511,201512,201601,201602,201603,201604,201605,201606,201607,201608,201609,201610,201611,201612,201701,201702,201703,201704,201705,201706,201707,201708,201709,201710,201711,201712,201801,201802,201803,201804,201805,201806,201807,201808,201809,201810,201811,201812]


# 排名，求和